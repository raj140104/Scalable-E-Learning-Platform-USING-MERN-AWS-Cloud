{"ast":null,"code":"import{toast}from\"react-hot-toast\";import{studentEndpoints}from\"../apis\";import{apiConnector}from\"../apiconnector\";import rzpLogo from\"../../assets/logo/rzp_logo.png\";import{setPaymentLoading}from\"../../slices/courseSlice\";import{resetCart}from\"../../slices/cartSlice\";const{COURSE_PAYMENT_API,COURSE_VERIFY_API,SEND_PAYMENT_SUCCESS_EMAIL_API}=studentEndpoints;function loadScript(src){return new Promise(resolve=>{const script=document.createElement(\"script\");script.src=src;script.onload=()=>{resolve(true);};script.onerror=()=>{resolve(false);};document.body.appendChild(script);});}export async function buyCourse(token,courses,userDetails,navigate,dispatch){const toastId=toast.loading(\"Loading...\");try{//load the script\nconst res=await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");if(!res){toast.error(\"RazorPay SDK failed to load\");return;}//initiate the order\nconst orderResponse=await apiConnector(\"POST\",COURSE_PAYMENT_API,{courses},{Authorization:`Bearer ${token}`});if(!orderResponse.data.success){throw new Error(orderResponse.data.message);}console.log(\"PRINTING orderResponse\",orderResponse);//options\nconst options={key:process.env.RAZORPAY_KEY,currency:orderResponse.data.message.currency,amount:`${orderResponse.data.message.amount}`,order_id:orderResponse.data.message.id,name:\"StudyNotion\",description:\"Thank You for Purchasing the Course\",image:rzpLogo,prefill:{name:`${userDetails.firstName}`,email:userDetails.email},handler:function(response){//send successful wala mail\nsendPaymentSuccessEmail(response,orderResponse.data.message.amount,token);//verifyPayment\nverifyPayment({...response,courses},token,navigate,dispatch);}};//miss hogya tha \nconst paymentObject=new window.Razorpay(options);paymentObject.open();paymentObject.on(\"payment.failed\",function(response){toast.error(\"oops, payment failed\");console.log(response.error);});}catch(error){console.log(\"PAYMENT API ERROR.....\",error);toast.error(\"Could not make Payment\");}toast.dismiss(toastId);}async function sendPaymentSuccessEmail(response,amount,token){try{await apiConnector(\"POST\",SEND_PAYMENT_SUCCESS_EMAIL_API,{orderId:response.razorpay_order_id,paymentId:response.razorpay_payment_id,amount},{Authorization:`Bearer ${token}`});}catch(error){console.log(\"PAYMENT SUCCESS EMAIL ERROR....\",error);}}//verify payment\nasync function verifyPayment(bodyData,token,navigate,dispatch){const toastId=toast.loading(\"Verifying Payment....\");dispatch(setPaymentLoading(true));try{const response=await apiConnector(\"POST\",COURSE_VERIFY_API,bodyData,{Authorization:`Bearer ${token}`});if(!response.data.success){throw new Error(response.data.message);}toast.success(\"payment Successful, ypou are addded to the course\");navigate(\"/dashboard/enrolled-courses\");dispatch(resetCart());}catch(error){console.log(\"PAYMENT VERIFY ERROR....\",error);toast.error(\"Could not verify Payment\");}toast.dismiss(toastId);dispatch(setPaymentLoading(false));}","map":{"version":3,"names":["toast","studentEndpoints","apiConnector","rzpLogo","setPaymentLoading","resetCart","COURSE_PAYMENT_API","COURSE_VERIFY_API","SEND_PAYMENT_SUCCESS_EMAIL_API","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","buyCourse","token","courses","userDetails","navigate","dispatch","toastId","loading","res","error","orderResponse","Authorization","data","success","Error","message","console","log","options","key","process","env","RAZORPAY_KEY","currency","amount","order_id","id","name","description","image","prefill","firstName","email","handler","response","sendPaymentSuccessEmail","verifyPayment","paymentObject","window","Razorpay","open","on","dismiss","orderId","razorpay_order_id","paymentId","razorpay_payment_id","bodyData"],"sources":["C:/Users/rites/Downloads/7th sem/7th Sem Project/Study-pilot/Study-pilot/src/services/operations/studentFeaturesAPI.js"],"sourcesContent":["import { toast } from \"react-hot-toast\";\nimport { studentEndpoints } from \"../apis\";\nimport { apiConnector } from \"../apiconnector\";\nimport rzpLogo from \"../../assets/logo/rzp_logo.png\"\nimport { setPaymentLoading } from \"../../slices/courseSlice\";\nimport { resetCart } from \"../../slices/cartSlice\";\n\n\nconst { COURSE_PAYMENT_API, COURSE_VERIFY_API, SEND_PAYMENT_SUCCESS_EMAIL_API } = studentEndpoints;\n\nfunction loadScript(src) {\n    return new Promise((resolve) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n\n        script.onload = () => {\n            resolve(true);\n        }\n        script.onerror = () => {\n            resolve(false);\n        }\n        document.body.appendChild(script);\n    })\n}\n\n\nexport async function buyCourse(token, courses, userDetails, navigate, dispatch) {\n    const toastId = toast.loading(\"Loading...\");\n    try {\n        //load the script\n        const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n\n        if (!res) {\n            toast.error(\"RazorPay SDK failed to load\");\n            return;\n        }\n\n        //initiate the order\n        const orderResponse = await apiConnector(\"POST\", COURSE_PAYMENT_API,\n            { courses },\n            {\n                Authorization: `Bearer ${token}`,\n            })\n\n        if (!orderResponse.data.success) {\n            throw new Error(orderResponse.data.message);\n        }\n        console.log(\"PRINTING orderResponse\", orderResponse);\n        //options\n        const options = {\n            key: process.env.RAZORPAY_KEY,\n            currency: orderResponse.data.message.currency,\n            amount: `${orderResponse.data.message.amount}`,\n            order_id: orderResponse.data.message.id,\n            name: \"StudyNotion\",\n            description: \"Thank You for Purchasing the Course\",\n            image: rzpLogo,\n            prefill: {\n                name: `${userDetails.firstName}`,\n                email: userDetails.email\n            },\n            handler: function (response) {\n                //send successful wala mail\n                sendPaymentSuccessEmail(response, orderResponse.data.message.amount, token);\n                //verifyPayment\n                verifyPayment({ ...response, courses }, token, navigate, dispatch);\n            }\n        }\n        //miss hogya tha \n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n        paymentObject.on(\"payment.failed\", function (response) {\n            toast.error(\"oops, payment failed\");\n            console.log(response.error);\n        })\n\n    }\n    catch (error) {\n        console.log(\"PAYMENT API ERROR.....\", error);\n        toast.error(\"Could not make Payment\");\n    }\n    toast.dismiss(toastId);\n}\n\nasync function sendPaymentSuccessEmail(response, amount, token) {\n    try {\n        await apiConnector(\"POST\", SEND_PAYMENT_SUCCESS_EMAIL_API, {\n            orderId: response.razorpay_order_id,\n            paymentId: response.razorpay_payment_id,\n            amount,\n        }, {\n            Authorization: `Bearer ${token}`\n        })\n    }\n    catch (error) {\n        console.log(\"PAYMENT SUCCESS EMAIL ERROR....\", error);\n    }\n}\n\n//verify payment\nasync function verifyPayment(bodyData, token, navigate, dispatch) {\n    const toastId = toast.loading(\"Verifying Payment....\");\n    dispatch(setPaymentLoading(true));\n    try {\n        const response = await apiConnector(\"POST\", COURSE_VERIFY_API, bodyData, {\n            Authorization: `Bearer ${token}`,\n        })\n\n        if (!response.data.success) {\n            throw new Error(response.data.message);\n        }\n        toast.success(\"payment Successful, ypou are addded to the course\");\n        navigate(\"/dashboard/enrolled-courses\");\n        dispatch(resetCart());\n    }\n    catch (error) {\n        console.log(\"PAYMENT VERIFY ERROR....\", error);\n        toast.error(\"Could not verify Payment\");\n    }\n    toast.dismiss(toastId);\n    dispatch(setPaymentLoading(false));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}