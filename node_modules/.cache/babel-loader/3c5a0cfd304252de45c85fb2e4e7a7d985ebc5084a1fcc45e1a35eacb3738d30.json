{"ast":null,"code":"import{useState}from\"react\";import{Chart,registerables}from\"chart.js\";import{Pie}from\"react-chartjs-2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";Chart.register(...registerables);export default function InstructorChart(_ref){let{courses}=_ref;// State to keep track of the currently selected chart\nconst[currChart,setCurrChart]=useState(\"students\");// Function to generate random colors for the chart\nconst generateRandomColors=numColors=>{const colors=[];for(let i=0;i<numColors;i++){const color=`rgb(${Math.floor(Math.random()*256)}, ${Math.floor(Math.random()*256)}, ${Math.floor(Math.random()*256)})`;colors.push(color);}return colors;};// Data for the chart displaying student information\nconst chartDataStudents={labels:courses.map(course=>course.courseName),datasets:[{data:courses.map(course=>course.totalStudentsEnrolled),backgroundColor:generateRandomColors(courses.length)}]};// Data for the chart displaying income information\nconst chartIncomeData={labels:courses.map(course=>course.courseName),datasets:[{data:courses.map(course=>course.totalAmountGenerated),backgroundColor:generateRandomColors(courses.length)}]};// Options for the chart\nconst options={maintainAspectRatio:false};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-1 flex-col gap-y-4 rounded-md bg-richblack-800 p-6\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg font-bold text-richblack-5\",children:\"Visualize\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-x-4 font-semibold\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrChart(\"students\"),className:`rounded-sm p-1 px-3 transition-all duration-200 ${currChart===\"students\"?\"bg-richblack-700 text-yellow-50\":\"text-yellow-400\"}`,children:\"Students\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrChart(\"income\"),className:`rounded-sm p-1 px-3 transition-all duration-200 ${currChart===\"income\"?\"bg-richblack-700 text-yellow-50\":\"text-yellow-400\"}`,children:\"Income\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"relative mx-auto aspect-square h-full w-full\",children:/*#__PURE__*/_jsx(Pie,{data:currChart===\"students\"?chartDataStudents:chartIncomeData,options:options})})]});}","map":{"version":3,"names":["useState","Chart","registerables","Pie","jsx","_jsx","jsxs","_jsxs","register","InstructorChart","_ref","courses","currChart","setCurrChart","generateRandomColors","numColors","colors","i","color","Math","floor","random","push","chartDataStudents","labels","map","course","courseName","datasets","data","totalStudentsEnrolled","backgroundColor","length","chartIncomeData","totalAmountGenerated","options","maintainAspectRatio","className","children","onClick"],"sources":["C:/Users/rites/Downloads/7th sem/7th Sem Project/Study-pilot/Study-pilot/src/components/core/Dashboard/InstructorDashboard/InstructorChart.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport { Chart, registerables } from \"chart.js\"\nimport { Pie } from \"react-chartjs-2\"\n\nChart.register(...registerables)\n\nexport default function InstructorChart({ courses }) {\n  // State to keep track of the currently selected chart\n  const [currChart, setCurrChart] = useState(\"students\")\n\n  // Function to generate random colors for the chart\n  const generateRandomColors = (numColors) => {\n    const colors = []\n    for (let i = 0; i < numColors; i++) {\n      const color = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(\n        Math.random() * 256\n      )}, ${Math.floor(Math.random() * 256)})`\n      colors.push(color)\n    }\n    return colors\n  }\n\n  // Data for the chart displaying student information\n  const chartDataStudents = {\n    labels: courses.map((course) => course.courseName),\n    datasets: [\n      {\n        data: courses.map((course) => course.totalStudentsEnrolled),\n        backgroundColor: generateRandomColors(courses.length),\n      },\n    ],\n  }\n\n  // Data for the chart displaying income information\n  const chartIncomeData = {\n    labels: courses.map((course) => course.courseName),\n    datasets: [\n      {\n        data: courses.map((course) => course.totalAmountGenerated),\n        backgroundColor: generateRandomColors(courses.length),\n      },\n    ],\n  }\n\n  // Options for the chart\n  const options = {\n    maintainAspectRatio: false,\n  }\n\n  return (\n    <div className=\"flex flex-1 flex-col gap-y-4 rounded-md bg-richblack-800 p-6\">\n      <p className=\"text-lg font-bold text-richblack-5\">Visualize</p>\n      <div className=\"space-x-4 font-semibold\">\n        {/* Button to switch to the \"students\" chart */}\n        <button\n          onClick={() => setCurrChart(\"students\")}\n          className={`rounded-sm p-1 px-3 transition-all duration-200 ${\n            currChart === \"students\"\n              ? \"bg-richblack-700 text-yellow-50\"\n              : \"text-yellow-400\"\n          }`}\n        >\n          Students\n        </button>\n        {/* Button to switch to the \"income\" chart */}\n        <button\n          onClick={() => setCurrChart(\"income\")}\n          className={`rounded-sm p-1 px-3 transition-all duration-200 ${\n            currChart === \"income\"\n              ? \"bg-richblack-700 text-yellow-50\"\n              : \"text-yellow-400\"\n          }`}\n        >\n          Income\n        </button>\n      </div>\n      <div className=\"relative mx-auto aspect-square h-full w-full\">\n        {/* Render the Pie chart based on the selected chart */}\n        <Pie\n          data={currChart === \"students\" ? chartDataStudents : chartIncomeData}\n          options={options}\n        />\n      </div>\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}